x = c(2,7,5)
x
y = seq(from = 4, length = 3, by = 3)
y
x + y
x^y
x[2]
x[2:3]
x[-2] ## remove the 2nd elements
z
z = matrix(seq(1,12),4,3)
z
z[3:4,2:3]
z[,2:3]
z[,1] ## will return as vector type
z[,1,drop = FALSE]
dim(z) ## Check dimension
ls() ## list all variables within the env
rm(y) ## Remove a typical variable
ls()
x = runif(50)  ## 50 random variable follows uniform distribution
x[:5]
x = runif(50)  ## 50 random variable follows uniform distribution
x[1:5]
x = runif(50)  ## 50 random variable follows uniform distribution
y = runif(50)  ## 50 random variable follows uniform distribution
plot(x,y)
set.seed(1)
x = runif(50)  ## 50 random variable follows uniform distribution
y = runif(50)  ## 50 random variable follows uniform distribution
plot(x,y)
set.seed(11)
x = runif(50)  ## 50 random variable follows uniform distribution
y = runif(50)  ## 50 random variable follows uniform distribution
plot(x,y)
set.seed(11)
x = runif(50)  ## 50 random variable follows uniform distribution
y = rnorm(50)  ## 50 random variable follows standard normal distribution
plot(x,y)
set.seed(11)
x = runif(50)  ## 50 random variable follows uniform distribution
y = rnorm(50)  ## 50 random variable follows standard normal distribution
plot(x,y, xlab = "Random Uniform", ylab = "Random Noraml", pch = "*", col = "blue")
par(mfrom = c(2,1))  ## 2 rows, 1 cols
plot(x,y, xlab = "Random Uniform", ylab = "Random Noraml", pch = "*", col = "blue")
hist(y)
?par
par(mfrow = c(2,1))  ## 2 rows, 1 cols
plot(x,y, xlab = "Random Uniform", ylab = "Random Noraml", pch = "*", col = "blue")
hist(y)
par(mfrow = c(2,1))  ## 2 rows, 1 cols
plot(x,y, xlab = "Random Uniform", ylab = "Random Noraml", pch = "*", col = "blue")
hist(y)
par(mfrow = c(2,1))  ## 2 rows, 1 cols
plot(x,y, xlab = "Random Uniform", ylab = "Random Noraml", pch = "*", col = "blue")
hist(y)
par(mfrow = c(2,1))  ## 2 rows, 1 cols
plot(x,y, xlab = "Random Uniform", ylab = "Random Noraml", pch = "*", col = "blue")
hist(y)
par(mfrow = c(1,1))  ## Restore the setting
getwd()
x = c(2,7,5)
x
y = seq(from = 4, length = 3, by = 3)
y
x + y
x^y
x[2]
x[2:3]
x[-2] ## remove the 2nd elements
z = matrix(seq(1,12),4,3)
z
z[3:4,2:3]
z[,2:3]
z[,1] ## will return as vector type
z[,1,drop = FALSE] ## Remain Matrix
dim(z) ## Check dimension
ls() ## list all variables within the env
rm(y) ## Remove a typical variable
ls()
set.seed(11)
x = runif(50)  ## 50 random variable follows uniform distribution
y = rnorm(50)  ## 50 random variable follows standard normal distribution
plot(x,y, xlab = "Random Uniform", ylab = "Random Noraml", pch = "*", col = "blue")
par(mfrow = c(2,1))  ## 2 rows, 1 cols
plot(x,y, xlab = "Random Uniform", ylab = "Random Noraml", pch = "*", col = "blue")
hist(y)
par(mfrow = c(1,1))  ## Restore the setting
auto = read.csv("./") ### Read data
auto = read.csv("./Data/Auto.csv") ### Read data
names(auto)  ## check all variables
summary(auto)
table(auto$horsepower)
dim(auto)
class(auto)
plot(auto$cylinders,auto$mpg)
plot(auto$cylinders,auto$mpg,type = "l")
plot(auto$cylinders,auto$mpg)
plot(auto$cylinders,auto$mpg)
plot(auto$cylinders, auto$mpg)
model <- lm(auto$mpg ~ auto$cylinders)
abline(model, col="red") ## add a trend line as red
plot(auto$cylinders, auto$mpg)
lowess_model <- lowess(auto$cylinders, auto$mpg)
lines(lowess_model, col="red") ### add the lowess soomth line
attach(auto) ## make a columns as an variable and store into the env
search()
## boxplot
plot(cylinders,mpg)
## boxplot
plot(as.factor(cylinders),mpg)
